@model Blog.ViewModels.EditBlogViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<form id="upload-form" method="post" ng-submit="submit($event)" novalidate="novalidate">
    <div class="form-horizontal">
        <h4>Blog</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UrlName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlogCategoryId, "BlogCategoryId", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @*
                    @Html.DropDownList("BlogCategoryId", null, htmlAttributes: new { @class = "form-control" })
                *@
                @Html.EditorFor(model => model.BlogCategoryId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BlogCategoryId, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
</form>

@Scripts.Render(Bundles.Js.JqueryVal)
@Scripts.Render(Bundles.Js.AutoNgModel)
<script>
    //disable ignoring validation of id field
    $("#upload-form").validate().settings.ignore = ":hidden:not([id*=Id])";
</script>