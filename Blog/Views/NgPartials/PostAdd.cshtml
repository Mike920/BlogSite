@model Blog.ViewModels.CreatePost

@{
    ViewBag.Title = "PostAdd";
}

<h2>PostAdd</h2>

<form id="upload-form" novalidate="novalidate">
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select ng-model="model.CategoryId" ng-options="cat.Id as cat.Name for cat in categories"></select>
                @Html.EditorFor(model => model.CategoryId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" ng-disabled="loading" ng-click="submit()" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>


    <link href="~/Content/tinyeditor.css" rel="stylesheet" />
    @Scripts.Render(Bundles.Js.JqueryVal)
    @Scripts.Render(Bundles.Js.AutoNgModel)
    <script src="~/Scripts/packed.js"></script>
    <script src="~/Scripts/tinyeditor.js"></script>

    <script type="text/javascript">
        var editor = new TINY.editor.edit('editor', {
            id: 'Content',
            width: 584,
            height: 175,
            cssclass: 'te',
            controlclass: 'tecontrol',
            rowclass: 'teheader',
            dividerclass: 'tedivider',
            controls: ['bold', 'italic', 'underline', 'strikethrough', '|', 'subscript', 'superscript', '|',
                      'orderedlist', 'unorderedlist', '|', 'outdent', 'indent', '|', 'leftalign',
                      'centeralign', 'rightalign', 'blockjustify', '|', 'unformat', '|', 'undo', 'redo', 'n',
                      'font', 'size', 'style', '|', 'image', 'hr', 'link', 'unlink', '|', 'cut', 'copy', 'paste', 'print'],
            footer: true,
            fonts: ['Verdana', 'Arial', 'Georgia', 'Trebuchet MS'],
            xhtml: true,
            cssfile: '@Url.Content("~/Content/tinyeditor.css")',
            bodyid: 'editor',
            footerclass: 'tefooter',
            toggle: { text: 'show source', activetext: 'show wysiwyg', cssclass: 'toggle' },
            resize: { cssclass: 'resize' }
        });

        $(document).ready(function () { $("#submit").click(function () { editor.post(); }); });
    </script>
